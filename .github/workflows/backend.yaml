name: Deploy Python App with Docker on EC2 via ECR

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout repo
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # 3. Save SSH key
      - name: Save SSH key
        run: |
          echo "${{ secrets.EC2_SSH_KEY }}" | tr -d '\r' | sed 's/\\n/\n/g' > rasi.key.pem
          chmod 400 rasi.key.pem

      # 4. Deploy to EC2
      - name: Deploy to EC2
        run: |
          ssh -i rasi.key.pem -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << EOF
            set -e

            # Export environment variables for use inside EC2
            export AWS_REGION=${{ secrets.AWS_REGION }}
            export ECR_REGISTRY=${{ secrets.ECR_REGISTRY }}
            export ECR_REPOSITORY=${{ secrets.ECR_REPOSITORY }}
            export IMAGE_TAG=latest
            export DB_HOST=${{ secrets.DB_HOST }}
            export DB_USER=${{ secrets.DB_USER }}
            export DB_PASSWORD=${{ secrets.DB_PASSWORD }}
            export DB_NAME=${{ secrets.DB_NAME }}

            # Authenticate with ECR
            aws ecr get-login-password --region \$AWS_REGION \
              | docker login --username AWS --password-stdin \$ECR_REGISTRY

            # Pull latest image
            docker pull \$ECR_REGISTRY/\$ECR_REPOSITORY:\$IMAGE_TAG

            # Stop old container if running
            docker rm -f my-python-app || true

            # Run new container
            docker run -d --name my-python-app -p 80:5000 \
              -e DB_HOST=\$DB_HOST \
              -e DB_USER=\$DB_USER \
              -e DB_PASSWORD=\$DB_PASSWORD \
              -e DB_NAME=\$DB_NAME \
              \$ECR_REGISTRY/\$ECR_REPOSITORY:\$IMAGE_TAG
          EOF
